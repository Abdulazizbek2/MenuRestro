// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuRestro.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20241027175632_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("MenuRestro.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeFoodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodId");

                    b.HasIndex("MenuId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TypeFoodId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("MenuRestro.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MenuRestro.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("MenuRestro.Models.TypeFood", b =>
                {
                    b.Property<int>("TypeFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TypeFoodId");

                    b.ToTable("TypeFoods");
                });

            modelBuilder.Entity("MenuRestro.Models.Food", b =>
                {
                    b.HasOne("MenuRestro.Models.Menu", null)
                        .WithMany("Foods")
                        .HasForeignKey("MenuId");

                    b.HasOne("MenuRestro.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuRestro.Models.TypeFood", "TypeFood")
                        .WithMany("Foods")
                        .HasForeignKey("TypeFoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("TypeFood");
                });

            modelBuilder.Entity("MenuRestro.Models.Menu", b =>
                {
                    b.HasOne("MenuRestro.Models.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("MenuRestro.Models.Menu", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("MenuRestro.Models.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("MenuRestro.Models.TypeFood", b =>
                {
                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
